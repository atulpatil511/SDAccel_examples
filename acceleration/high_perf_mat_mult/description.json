{
    "runtime": ["OpenCL"],
    "example" : "High Performance Matrix Multiplication",
    "overview" : [
    "This example implements a high performance matrix multiplication of two input matrices (A*B=C). The matrix multiplication kernel operates on matrices of type int16 and produces int16 results. Internally, the kernel has a systolic array of 2048 DSP units and is attached to two DDR banks. The DSP array runs at 400 MHz whereas the logic around the array runs at 300 MHz.",
    " ",
    "The design is targeting execution on an SDAccel supported FPGA acceleration card. The hostcode is compiled into the high_perf_mat_mult executable. The executable takes 3 arguments, namely number of rows of matrix A, number of columns of matrix B, and the common dimension representing number of columns in matrix A and number of rows in matrix B.",
    "```",
    "high_perf_mat_mult <rowsA> <colsB> <commonDim>",
    "```",
    "The testbench of the example reports the kernel execution time, the total number of operations (sum of matrix element multiplications and additions), as well as the efficiency expressed by number of operations per second. Please note, the testbench also compares the kernel results with a pure software matrix multiplication and reports potential differences.",
    " ",
    "The test is based on an encrypted RTL kernel. This kernel can also be configured to run with int8 data values, which effectively doubles the number of operations and throughput."
    ],
    "targets": ["hw", "hw_emu"],
    "xcl": true,
    "host_exe": "high_perf_mat_mult",        
    "em_cmd" : "./high_perf_mat_mult BUILD/high_perf_mat_mult0.xclbin 64 64 64",
    "cmd_args": "./high_perf_mat_mult BUILD/high_perf_mat_mult0.xclbin 64 64 64",        
    "libs" : [
        "xcl"
    ],
    "contributors" : [
        {
            "group": "Xilinx",
            "url" : "http://www.xilinx.com"
        }
    ],
    "sdx_gui": false
}
